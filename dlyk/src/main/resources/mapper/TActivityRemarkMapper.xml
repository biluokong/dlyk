<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.biluo.mapper.TActivityRemarkMapper">

    <resultMap id="BaseResultMap" type="com.biluo.model.po.TActivityRemark">
            <id property="id" column="id" jdbcType="INTEGER"/>
            <result property="activityId" column="activity_id" jdbcType="INTEGER"/>
            <result property="noteContent" column="note_content" jdbcType="VARCHAR"/>
            <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
            <result property="createBy" column="create_by" jdbcType="INTEGER"/>
            <result property="editTime" column="edit_time" jdbcType="TIMESTAMP"/>
            <result property="editBy" column="edit_by" jdbcType="INTEGER"/>
            <result property="deleted" column="deleted" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,activity_id,note_content,
        create_time,create_by,edit_time,
        edit_by,deleted
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from t_activity_remark
        where  id = #{id,jdbcType=INTEGER} 
    </select>
  
  <resultMap id="remarkDtoResultMap" type="com.biluo.model.dto.ActivityRemarkDto">
    <id property="id" column="id" jdbcType="INTEGER"/>
    <result property="activityId" column="activity_id" jdbcType="INTEGER"/>
    <result property="noteContent" column="note_content" jdbcType="VARCHAR"/>
    <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
    <result property="createBy" column="create_by" jdbcType="INTEGER"/>
    <result property="createName" column="createName" jdbcType="VARCHAR"/>
    <result property="editTime" column="edit_time" jdbcType="TIMESTAMP"/>
    <result property="editBy" column="edit_by" jdbcType="INTEGER"/>
    <result property="editName" column="editName" jdbcType="VARCHAR"/>
    <result property="deleted" column="deleted" jdbcType="INTEGER"/>
  </resultMap>
  
	<select id="getRemarkList" resultType="com.biluo.model.dto.ActivityRemarkDto" resultMap="remarkDtoResultMap">
    select
        tar.*,
        tu1.name createName,
        tu2.name editName
    from t_activity_remark tar
        left join t_user tu1 on tar.create_by = tu1.id
        left join t_user tu2 on tar.edit_by = tu2.id
    <where>
      tar.activity_id = #{activityId}
      and (tar.deleted is null or tar.deleted = 0)
      ${filterSQL}
    </where>
  </select>
	
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from t_activity_remark
        where  id = #{id,jdbcType=INTEGER} 
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.biluo.model.po.TActivityRemark" useGeneratedKeys="true">
        insert into t_activity_remark
        ( id,activity_id,note_content
        ,create_time,create_by,edit_time
        ,edit_by,deleted)
        values (#{id,jdbcType=INTEGER},#{activityId,jdbcType=INTEGER},#{noteContent,jdbcType=VARCHAR}
        ,#{createTime,jdbcType=TIMESTAMP},#{createBy,jdbcType=INTEGER},#{editTime,jdbcType=TIMESTAMP}
        ,#{editBy,jdbcType=INTEGER},#{deleted,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.biluo.model.po.TActivityRemark" useGeneratedKeys="true">
        insert into t_activity_remark
        <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="id != null">id,</if>
                <if test="activityId != null">activity_id,</if>
                <if test="noteContent != null">note_content,</if>
                <if test="createTime != null">create_time,</if>
                <if test="createBy != null">create_by,</if>
                <if test="editTime != null">edit_time,</if>
                <if test="editBy != null">edit_by,</if>
                <if test="deleted != null">deleted,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
                <if test="id != null">#{id,jdbcType=INTEGER},</if>
                <if test="activityId != null">#{activityId,jdbcType=INTEGER},</if>
                <if test="noteContent != null">#{noteContent,jdbcType=VARCHAR},</if>
                <if test="createTime != null">#{createTime,jdbcType=TIMESTAMP},</if>
                <if test="createBy != null">#{createBy,jdbcType=INTEGER},</if>
                <if test="editTime != null">#{editTime,jdbcType=TIMESTAMP},</if>
                <if test="editBy != null">#{editBy,jdbcType=INTEGER},</if>
                <if test="deleted != null">#{deleted,jdbcType=INTEGER},</if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.biluo.model.po.TActivityRemark">
        update t_activity_remark
        <set>
                <if test="activityId != null">
                    activity_id = #{activityId,jdbcType=INTEGER},
                </if>
                <if test="noteContent != null">
                    note_content = #{noteContent,jdbcType=VARCHAR},
                </if>
                <if test="createTime != null">
                    create_time = #{createTime,jdbcType=TIMESTAMP},
                </if>
                <if test="createBy != null">
                    create_by = #{createBy,jdbcType=INTEGER},
                </if>
                <if test="editTime != null">
                    edit_time = #{editTime,jdbcType=TIMESTAMP},
                </if>
                <if test="editBy != null">
                    edit_by = #{editBy,jdbcType=INTEGER},
                </if>
                <if test="deleted != null">
                    deleted = #{deleted,jdbcType=INTEGER},
                </if>
        </set>
        where   id = #{id,jdbcType=INTEGER} 
    </update>
    <update id="updateByPrimaryKey" parameterType="com.biluo.model.po.TActivityRemark">
        update t_activity_remark
        set 
            activity_id =  #{activityId,jdbcType=INTEGER},
            note_content =  #{noteContent,jdbcType=VARCHAR},
            create_time =  #{createTime,jdbcType=TIMESTAMP},
            create_by =  #{createBy,jdbcType=INTEGER},
            edit_time =  #{editTime,jdbcType=TIMESTAMP},
            edit_by =  #{editBy,jdbcType=INTEGER},
            deleted =  #{deleted,jdbcType=INTEGER}
        where   id = #{id,jdbcType=INTEGER} 
    </update>
</mapper>
